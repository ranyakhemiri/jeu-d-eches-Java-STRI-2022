/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Project/Maven2/JavaApp/src/main/java/${packagePath}/${mainClassName}.java to edit this template
 */

package com.mycompany.echec;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.LinkedList;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author yaicicelina
 */
public class Echec {
    public static LinkedList<Piece> ps=new LinkedList<>();
    public static Piece selectedPiece=null;
    
    public static void main(String[] args)throws IOException {
        BufferedImage all=ImageIO.read(new File("/home/yaicicelina/Téléchargements/chess.png"));
        Image imgs[]=new Image[12];
       int ind=0;
        for(int y=0;y<400;y+=200){
        for(int x=0;x<1200;x+=200){
            imgs[ind]=all.getSubimage(x, y, 200, 200).getScaledInstance(62, 62, BufferedImage.SCALE_SMOOTH);
       ind++;
        }    
        }
        
        
        /*------------pieces-------------*/
        Piece bloom=new Piece(0, 0, false, "Bloom", ps);
        Piece flora=new Piece(1, 0, false, "Flora", ps);
        Piece tecna=new Piece(2, 0, false, "Tecna", ps);
        Piece musa=new Piece(3, 0, false, "Musa", ps);
        Piece layla=new Piece(4, 0, false, "Layla", ps);
        Piece tecnaa=new Piece(5, 0, false, "Tecna", ps);
        Piece floraa=new Piece(6, 0, false, "Flora", ps);
        Piece bloomm=new Piece(7, 0, false, "Bloom", ps);
        
        Piece stella=new Piece(1, 1, false, "Stella", ps);
        Piece stella2=new Piece(2, 1, false, "Stella", ps);
        Piece stella3=new Piece(3, 1, false, "Stella", ps);
        Piece stella4=new Piece(4, 1, false, "Stella", ps);
        Piece stella5=new Piece(5, 1, false, "Stella", ps);
        Piece stella6=new Piece(6, 1, false, "Stella", ps);
        Piece stella7=new Piece(7, 1, false, "Stella", ps);
        Piece stella8=new Piece(0, 1, false, "Stella", ps);
        
        Piece icy=new Piece(0, 7, true, "Icy", ps);
        Piece darcy=new Piece(1, 7, true, "Darcy", ps);
        Piece strormy=new Piece(2, 7, true, "Stormy", ps);
        Piece belladone=new Piece(3, 7, true, "Belladone", ps);
        Piece lysliss=new Piece(4, 7, true, "Lysliss", ps);
        Piece stormyy=new Piece(5, 7, true, "Stormy", ps);
        Piece darcyy=new Piece(6, 7, true, "Darcy", ps);
        Piece icyy=new Piece(7, 7, true, "Icy", ps);
        
        Piece tharma=new Piece(1, 6, true, "Tharma", ps);
        Piece tharma2=new Piece(2, 6, true, "Tharma", ps);
        Piece tharma3=new Piece(3, 6, true, "Tharma", ps);
        Piece tharma4=new Piece(4, 6, true, "Tharma", ps);
        Piece tharma5=new Piece(5, 6, true, "Tharma", ps);
        Piece tharma6=new Piece(6, 6, true, "Tharma", ps);
        Piece tharma7=new Piece(7, 6, true, "Tharma", ps);
        Piece tharma8=new Piece(0, 6, true, "Tharma", ps);
        /*------------pieces-------------*/
        
        
        
        /*------------plateau-------------*/
        
        JFrame frame = new JFrame();
        frame.setBounds(10, 10, 512, 512);
        /*frame.setUndecorated(true);*/
        JPanel pn=new JPanel(){
            @Override
            public void paint(Graphics g) {
            boolean pink=true;
                for(int y= 0;y<8;y++){
            for(int x= 0;x<8;x++){
                if(pink){
                    g.setColor(Color.pink);
                }else{
                    g.setColor(new Color(119, 148, 85));
                    
                }
                g.fillRect(x*64, y*64, 64, 64);
           pink=!pink;
            }
            pink=!pink;
            
          /*-----------plateau---------------*/
            }
                for(Piece p: ps){
                    int ind=0;
                    if(p.name.equalsIgnoreCase("Layla")){
                        ind=0;
                    }
                    if(p.name.equalsIgnoreCase("Musa")){
                        ind=1;
                    }
                    if(p.name.equalsIgnoreCase("Tecna")){
                        ind=2;
                    }
                    if(p.name.equalsIgnoreCase("Flora")){
                        ind=3;
                    }
                    if(p.name.equalsIgnoreCase("Bloom")){
                        ind=4;
                    }
                    if(p.name.equalsIgnoreCase("Stella")){
                        ind=5;
                    }
                    
                    if(!p.isWhite){
                    if(p.name.equalsIgnoreCase("Lysliss")){
                        ind=6;
                    }
                    if(p.name.equalsIgnoreCase("Belladone")){
                        ind=7;
                    }
                    if(p.name.equalsIgnoreCase("Stormy")){
                        ind=8;
                    }
                    if(p.name.equalsIgnoreCase("Darcy")){
                        ind=9;
                    }
                    if(p.name.equalsIgnoreCase("Icy")){
                        ind=10;
                    }
                    if(p.name.equalsIgnoreCase("Tharma")){
                        ind=11;
                    }
                    }
                    g.drawImage(imgs[ind], p.x, p.y, this);
                }
            }
            
        };
        
        
        
        
        /* -------------selection et mouvement des pieces---------------*/
        frame.addMouseMotionListener(new MouseMotionListener(){
             @Override
            public void mouseDragged(MouseEvent me) {
                if(selectedPiece!=null){
                    selectedPiece.x=me.getX()-32;
                    selectedPiece.y=me.getY()-32;
                    frame.repaint();


                }

            }

            @Override
            public void mouseMoved(MouseEvent me) {
            }
    
        });
        frame.add(pn);
        frame.addMouseListener(new MouseListener(){
            @Override
            public void mouseClicked(MouseEvent me) {
            }

            @Override
            public void mousePressed(MouseEvent me) {
                //System.out.println(getPiece(me.getX(), me.getY()).name);
                selectedPiece=getPiece(me.getX(), me.getY());
            }

            @Override
            public void mouseReleased(MouseEvent me) {
                selectedPiece.move(me.getX()/64, me.getY()/64);   
                frame.repaint();
            }

            @Override
            public void mouseEntered(MouseEvent me) {
            }

            @Override
            public void mouseExited(MouseEvent me) {
            }
            
        });
           /* -------------selection et mouvement des pieces---------------*/

        frame.setDefaultCloseOperation(3);
        frame.setVisible(true);         
}
    public static Piece getPiece(int x, int y){
        int xp=x/64;
        int yp=y/64;
        
        for(Piece p:ps){
            if (p.xp==xp && p.yp==yp){
                return p;
            }
        }
        return null;
    }
    
    
}
